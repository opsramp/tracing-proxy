on:
  release:
    types: [ created ]
name: Handle Release
jobs:
  generate-deb:
    name: Create debian package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - uses: addnab/docker-run-action@v3
        with:
          image: golang:1.20.4-buster
          options: -v ${{ github.workspace }}:${{ github.workspace }} --env IS_GITHUB_ACTION=true --env VERSION_TAG=${{ github.event.release.tag_name }}
          run: |
            cd ${{ github.workspace }}
            /bin/bash build/vm/tracing-deb/script.sh
      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: "build/vm/tracing-deb/output/*"

  generate-rpm:
    name: Create RPM package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - uses: addnab/docker-run-action@v3
        with:
          image: rockylinux:8
          options: -v ${{ github.workspace }}:${{ github.workspace }} --env IS_GITHUB_ACTION=true --env VERSION_TAG=${{ github.event.release.tag_name }}
          run: |
            curl -L -O https://go.dev/dl/go1.20.4.linux-amd64.tar.gz
            rm -rf /usr/local/go && tar -C /usr/local -xzf go1.20.4.linux-amd64.tar.gz
            cd ${{ github.workspace }}
            PATH=$PATH:/usr/local/go/bin /bin/bash build/vm/tracing-rpm/script.sh
            mkdir -p ${{ github.workspace }}/output
            cp -r /root/rpmbuild/RPMS/x86_64/* ${{ github.workspace }}/output
      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: "${{ github.workspace }}/output/*"

  oci-container-image:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: opsramp/trace-proxy:${{ github.event.release.tag_name }}